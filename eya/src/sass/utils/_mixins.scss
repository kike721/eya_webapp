/* --------------------------------
	"Mixins" styles
-------------------------------- */
@mixin Title($size, $color) {
	@if ($size == "small") {
		@include RokkittBold;
		font-size: $title-size-small;
	} @else if ($size == "mid") {
		@include RokkittBold;
		font-size: $title-size-mid;
	} @else {
		@include RokkittBold;
		font-size: $title-size-big;
	}
	color: $color;
}

@mixin fontSize($font){
	font-size: ($font / $font-size-base) * 1em;
}

@mixin aspect-ratio($width, $height) {
  position: relative;
  &:before {
    display: block;
    content: "";
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }
  > .content {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
}

@mixin fullContainer(){
	@include box-sizing(border-box);
	position: relative;
	width: 100%;
	height: 100%;
	@media (min-width: ($tablet + 1)) {
		min-height: 610px;
	}
}

@mixin container(){
	@include box-sizing(border-box);
	position: relative;
	margin: 0 auto;
	width: 100%;
	max-width: 1200px;
}


@mixin absolute-full-container() {
	position: absolute;
	top: 0;
	left: 0;
	bottom: 0;
	right: 0;
}

@mixin box-sizing ($params) {
	-webkit-box-sizing: $params;
	-moz-box-sizing: $params;
	-ms-box-sizing: $params;
	-o-box-sizing: $params;
	box-sizing: $params;
}

@mixin box-shadow($params) {
	-webkit-box-shadow: $params;
  -moz-box-shadow: $params;
	-ms-box-shadow: $params;
	-o-box-shadow: $params;
  box-shadow: $params;
}

@mixin border-radius ($params) {
	-webkit-border-radius: $params;
	-moz-border-radius: $params;
	-ms-border-radius: $params;
	-o-border-radius: $params;
	border-radius: $params;
}

@mixin animation ($animate ) {
	-webkit-animation: $animate;
	-moz-animation: $animate;
	-ms-animation: $animate;
	-o-animation: $animate;
	animation: $animate;
}

@mixin centeredImage(){
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	margin: auto;
	max-width: 100%;
	max-height: 100%;
	position: absolute;
}

@mixin fullBackground(){
	@include background-size(cover);
	background-repeat: no-repeat;
	background-position: 50% 50%;
}

@mixin setImg(){
	display: block;
	width: 100%;
}

@mixin translateY($num) {
	-webkit-transform: translateY($num);
		-moz-transform: translateY($num);
		 -ms-transform: translateY($num);
			-o-transform: translateY($num);
				 transform: translateY($num);
}

@mixin translate3d($x, $y, $z) {
  -webkit-transform: translate3d($x, $y, $z);
     -moz-transform: translate3d($x, $y, $z);
       -o-transform: translate3d($x, $y, $z);
          transform: translate3d($x, $y, $z);
}

// Clearfix
// --------
// For clearing floats like a boss h5bp.com/q
@mixin clearFix() {
	*zoom: 1;
	&:before,
	&:after {
		display: table;
		content: "";
	}
	&:after {
		clear: both;
	}
}

// Browser Prefixes - Which CSS prefixes should be used?
$webkit: true !default;
$moz: true !default;
$ms: true !default;
$o: true !default;

// prefix declarations
@mixin prefixed($property, $value) {
  @if $webkit == true {
    -webkit-#{$property}: #{$value};
  }

  @if $moz == true {
    -moz-#{$property}: #{$value};
  }

  @if $ms == true {
    -ms-#{$property}: #{$value};
  }

  @if $o == true {
    -o-#{$property}: #{$value};
  }

  #{$property}: #{$value};
}

// prefix keyframes
@mixin keyframes($name) {
  @if $webkit == true {
    @-webkit-keyframes #{$name} {
      @content;
    }
  }

  @if $moz == true {
    @-moz-keyframes #{$name} {
      @content;
    }
  }

  @if $ms == true {
    @-ms-keyframes #{$name} {
      @content;
    }
  }

  @if $o == true {
    @-o-keyframes #{$name} {
      @content;
    }
  }

  @keyframes #{$name} {
    @content;
  }
}
